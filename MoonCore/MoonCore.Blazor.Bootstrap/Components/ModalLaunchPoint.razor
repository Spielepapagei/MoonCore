@using MoonCore.Blazor.Bootstrap.Models
@using MoonCore.Blazor.Bootstrap.Services
@using MoonCore.Blazor.Helpers
@using MoonCore.Helpers
@using MoonCore.Services

@inject ModalService ModalService

@foreach (var modal in Items)
{
    <div class="modal fade" id="modalLauncher@(modal.Id)" tabindex="-1">
        <div class="modal-dialog @(modal.CssClasses)">
            <div class="modal-content">
                @modal.Render
            </div>
        </div>
    </div>
}

@code
{
    private readonly List<ModalLaunchItem> Items = new();
    private int Counter = 1;
    
    protected override async Task OnInitializedAsync()
    {
        await ModalService.SetLaunchPoint(this);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        foreach (var item in Items)
        {
            if(item.Initialized)
                continue;
            
            await ModalService.Show($"modalLauncher{item.Id}", item.Focus);
            item.Initialized = true;
        }
    }

    public async Task Launch<T>(bool focus = false, string cssClasses = "", Action<Dictionary<string, object>>? buildAttributes = null) where T : ComponentBase
    {
        var item = new ModalLaunchItem()
        {
            Id = Counter + 0,
            CssClasses = cssClasses,
            Render = ComponentHelper.FromType<T>(buildAttributes),
            Focus = focus
        };
        
        Items.Add(item);
        Counter++;

        await InvokeAsync(StateHasChanged);
    }
}
